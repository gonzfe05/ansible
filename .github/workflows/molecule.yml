---
name: molecule

on:
  pull_request:
    paths:
      - "playbooks/roles/**"
      - "requirements.yml"
      - ".github/workflows/molecule.yml"
  push:
    branches: [ main ]
    paths:
      - "playbooks/roles/**"
      - "requirements.yml"
      - ".github/workflows/molecule.yml"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    concurrency:
      group: molecule-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        ansible: [ "9.*" ]
        distro: [ "ubuntu:24.04", "ubuntu:22.04", "debian:12" ]

    env:
      PY_COLORS: '1'
      ANSIBLE_FORCE_COLOR: '1'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Ansible + Molecule
        run: |
          python -m pip install --upgrade pip
          pip install "ansible-core==${{ matrix.ansible }}" \
                      molecule \
                      "molecule-plugins[docker]" \
                      ansible-lint yamllint

      - name: Cache Galaxy & pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.ansible/collections
            ~/.ansible/roles
            ~/.cache/pip
          key: ${{ runner.os }}-galaxy-${{ hashFiles('requirements.yml') }}
          restore-keys: |
            ${{ runner.os }}-galaxy-

      - name: Install Galaxy deps (if any)
        if: hashFiles('requirements.yml') != ''
        run: ansible-galaxy install -r requirements.yml

      - name: Lint
        run: |
          yamllint .
          ansible-lint

      - name: Run Molecule for all roles under playbooks/roles
        env:
          MOLECULE_IMAGE: ${{ matrix.distro }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          # Loop roles and run default scenario if present
          for role_dir in playbooks/roles/*; do
            if [ -d "$role_dir/molecule" ]; then
              echo "=== Running Molecule in $role_dir ==="
              ( cd "$role_dir" && MOLECULE_IMAGE="${MOLECULE_IMAGE}" molecule test --destroy always )
            else
              echo "Skipping $role_dir (no molecule/ directory)"
            fi
          done