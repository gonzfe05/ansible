---
name: Molecule Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  # Job to discover all roles with molecule tests
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Discover roles with molecule tests
        id: set-matrix
        run: |
          # Find all directories containing molecule tests
          roles=$(find playbooks/roles -type d -name molecule -exec dirname {} \; | sort | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix={\"role\":$roles}" >> $GITHUB_OUTPUT
          echo "Found roles with molecule tests:"
          echo $roles | jq -r '.[]'

  # Job to run molecule tests for each role
  molecule:
    runs-on: ubuntu-latest
    needs: discover
    if: needs.discover.outputs.matrix != '{"role":[]}'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install molecule[docker] ansible-lint yamllint docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run molecule test for ${{ matrix.role }}
        run: |
          cd "${{ matrix.role }}"
          molecule test
        env:
          MOLECULE_NO_LOG: false

  # Job to run all tests using the existing script (as a backup/validation)
  test-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install molecule[docker] ansible-lint yamllint docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Make test script executable
        run: chmod +x scripts/test_all_roles.sh

      - name: Run all molecule tests
        run: ./scripts/test_all_roles.sh
        env:
          MOLECULE_NO_LOG: false

  # Summary job to check if all tests passed
  summary:
    runs-on: ubuntu-latest
    needs: [molecule, test-all]
    if: always()
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.molecule.result }}" == "success" && "${{ needs.test-all.result }}" == "success" ]]; then
            echo "✅ All molecule tests passed!"
            exit 0
          else
            echo "❌ Some molecule tests failed"
            echo "Matrix tests result: ${{ needs.molecule.result }}"
            echo "Test-all result: ${{ needs.test-all.result }}"
            exit 1
          fi